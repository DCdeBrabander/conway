"use strict";(()=>{var s=class{constructor(e,t,a=10){this.x=0;this.y=0;this.size=0;this.x=e,this.y=t,this.size=a}},c=s;var o=class{constructor(e){this.cells=new Map;this.fps=2;this.resolution=10;this.draw=()=>{this.clear(),console.info("drawing..."),this.cells.forEach(this.drawCell),setTimeout(()=>{requestAnimationFrame(this.draw)},1e3/this.fps)};this.clear=()=>{this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height),this.canvasContext.fillStyle="black",this.canvasContext.fillRect(0,0,this.canvasElement.width,this.canvasElement.height)};this.drawCell=e=>{this.canvasContext.fillStyle="white",this.canvasContext.fillRect(e.x,e.y,e.size,e.size)};this.addCellAtCoordinate=(e,t)=>{let a=this.roundToNearest(e),i=this.roundToNearest(t),l=this.createCellCoordinate(a,i);return this.hasCellAtCoordinate(l)?(console.info("lets not create cells on top of eachother (yet?)"),!1):(this.cells.set(l,new c(a,i,this.resolution)),!0)};this.hasCellAtCoordinate=e=>this.cells.has(e);this.createCellCoordinate=(e,t)=>`[${e}:${t}]`;this.roundToNearest=(e,t=this.resolution)=>Math.floor(e/t)*t;this.canvasElement=e,this.canvasContext=this.canvasElement.getContext("2d"),requestAnimationFrame(this.draw)}},h=o;var r=document.getElementById("conway-canvas"),d=new h(r),u=()=>{r.width=window.innerWidth,r.height=window.innerHeight};window.addEventListener("resize",u,!1);window.addEventListener("mousedown",n=>{d.addCellAtCoordinate(n.clientX,n.clientY)},!1);u();console.info(d);})();
